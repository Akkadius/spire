/* tslint:disable */
/* eslint-disable */
/**
 * Spire
 * Spire API documentation
 *
 * The version of the OpenAPI document: 3.0
 * Contact: akkadius1@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { CrudcontrollersBulkFetchByIdsGetRequest } from '../models';
// @ts-ignore
import { ModelsAlternateCurrency } from '../models';
/**
 * AlternateCurrencyApi - axios parameter creator
 * @export
 */
export const AlternateCurrencyApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * 
         * @summary Creates AlternateCurrency
         * @param {ModelsAlternateCurrency} alternateCurrency AlternateCurrency
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createAlternateCurrency: async (alternateCurrency: ModelsAlternateCurrency, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'alternateCurrency' is not null or undefined
            if (alternateCurrency === null || alternateCurrency === undefined) {
                throw new RequiredError('alternateCurrency','Required parameter alternateCurrency was null or undefined when calling createAlternateCurrency.');
            }
            const localVarPath = `/alternate_currency`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            const queryParameters = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                queryParameters.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.query) {
                queryParameters.set(key, options.query[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const nonString = typeof alternateCurrency !== 'string';
            const needsSerialization = nonString && configuration && configuration.isJsonMime
                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])
                : nonString;
            localVarRequestOptions.data =  needsSerialization
                ? JSON.stringify(alternateCurrency !== undefined ? alternateCurrency : {})
                : (alternateCurrency || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Deletes AlternateCurrency
         * @param {number} id id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteAlternateCurrency: async (id: number, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            if (id === null || id === undefined) {
                throw new RequiredError('id','Required parameter id was null or undefined when calling deleteAlternateCurrency.');
            }
            const localVarPath = `/alternate_currency/{id}`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            const queryParameters = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                queryParameters.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.query) {
                queryParameters.set(key, options.query[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Gets AlternateCurrencies in bulk
         * @param {CrudcontrollersBulkFetchByIdsGetRequest} body body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAlternateCurrenciesBulk: async (body: CrudcontrollersBulkFetchByIdsGetRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling getAlternateCurrenciesBulk.');
            }
            const localVarPath = `/alternate_currencies/bulk`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            const queryParameters = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                queryParameters.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.query) {
                queryParameters.set(key, options.query[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const nonString = typeof body !== 'string';
            const needsSerialization = nonString && configuration && configuration.isJsonMime
                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])
                : nonString;
            localVarRequestOptions.data =  needsSerialization
                ? JSON.stringify(body !== undefined ? body : {})
                : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Gets AlternateCurrency
         * @param {number} id Id
         * @param {string} [includes] Relationships [all] for all [number] for depth of relationships to load or [.] separated relationship names &lt;h4&gt;Relationships&lt;/h4&gt;Item&lt;br&gt;Item.AlternateCurrencies&lt;br&gt;Item.CharacterCorpseItems&lt;br&gt;Item.DiscoveredItems&lt;br&gt;Item.Doors&lt;br&gt;Item.Doors.Item&lt;br&gt;Item.Fishings&lt;br&gt;Item.Fishings.Item&lt;br&gt;Item.Fishings.NpcType&lt;br&gt;Item.Fishings.NpcType.AlternateCurrency&lt;br&gt;Item.Fishings.NpcType.Loottable&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Item&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Lootdrop&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Item.Fishings.NpcType.Loottable.NpcTypes&lt;br&gt;Item.Fishings.NpcType.Merchantlists&lt;br&gt;Item.Fishings.NpcType.Merchantlists.Items&lt;br&gt;Item.Fishings.NpcType.Merchantlists.NpcTypes&lt;br&gt;Item.Fishings.NpcType.NpcEmotes&lt;br&gt;Item.Fishings.NpcType.NpcFactions&lt;br&gt;Item.Fishings.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Item.Fishings.NpcType.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.Fishings.NpcType.NpcSpell&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpell&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.Fishings.NpcType.NpcTypesTint&lt;br&gt;Item.Fishings.NpcType.Spawnentries&lt;br&gt;Item.Fishings.NpcType.Spawnentries.NpcType&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.Fishings.Zone&lt;br&gt;Item.Forages&lt;br&gt;Item.Forages.Item&lt;br&gt;Item.Forages.Zone&lt;br&gt;Item.GroundSpawns&lt;br&gt;Item.GroundSpawns.Zone&lt;br&gt;Item.ItemTicks&lt;br&gt;Item.Keyrings&lt;br&gt;Item.LootdropEntries&lt;br&gt;Item.LootdropEntries.Item&lt;br&gt;Item.LootdropEntries.Lootdrop&lt;br&gt;Item.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Lootdrop&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.LoottableEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.AlternateCurrency&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Loottable&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.Items&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.NpcTypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcEmotes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpell&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcTypesTint&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.NpcType&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.Merchantlists&lt;br&gt;Item.Merchantlists.Items&lt;br&gt;Item.Merchantlists.NpcTypes&lt;br&gt;Item.Merchantlists.NpcTypes.AlternateCurrency&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Item&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Lootdrop&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Loottable&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.NpcTypes&lt;br&gt;Item.Merchantlists.NpcTypes.Merchantlists&lt;br&gt;Item.Merchantlists.NpcTypes.NpcEmotes&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpell&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.Merchantlists.NpcTypes.NpcTypesTint&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.NpcType&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.ObjectContents&lt;br&gt;Item.Objects&lt;br&gt;Item.Objects.Item&lt;br&gt;Item.Objects.Zone&lt;br&gt;Item.StartingItems&lt;br&gt;Item.StartingItems.Item&lt;br&gt;Item.StartingItems.Zone&lt;br&gt;Item.Tasks&lt;br&gt;Item.Tasks.AlternateCurrency&lt;br&gt;Item.Tasks.TaskActivities&lt;br&gt;Item.Tasks.Tasksets&lt;br&gt;Item.TradeskillRecipeEntries&lt;br&gt;Item.TradeskillRecipeEntries.TradeskillRecipe&lt;br&gt;Item.TributeLevels
         * @param {string} [select] Column names [.] separated to fetch specific fields in response
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAlternateCurrency: async (id: number, includes?: string, select?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            if (id === null || id === undefined) {
                throw new RequiredError('id','Required parameter id was null or undefined when calling getAlternateCurrency.');
            }
            const localVarPath = `/alternate_currency/{id}`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (includes !== undefined) {
                localVarQueryParameter['includes'] = includes;
            }

            if (select !== undefined) {
                localVarQueryParameter['select'] = select;
            }


    
            const queryParameters = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                queryParameters.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.query) {
                queryParameters.set(key, options.query[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Lists AlternateCurrencies
         * @param {string} [includes] Relationships [all] for all [number] for depth of relationships to load or [.] separated relationship names &lt;h4&gt;Relationships&lt;/h4&gt;Item&lt;br&gt;Item.AlternateCurrencies&lt;br&gt;Item.CharacterCorpseItems&lt;br&gt;Item.DiscoveredItems&lt;br&gt;Item.Doors&lt;br&gt;Item.Doors.Item&lt;br&gt;Item.Fishings&lt;br&gt;Item.Fishings.Item&lt;br&gt;Item.Fishings.NpcType&lt;br&gt;Item.Fishings.NpcType.AlternateCurrency&lt;br&gt;Item.Fishings.NpcType.Loottable&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Item&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Lootdrop&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Item.Fishings.NpcType.Loottable.NpcTypes&lt;br&gt;Item.Fishings.NpcType.Merchantlists&lt;br&gt;Item.Fishings.NpcType.Merchantlists.Items&lt;br&gt;Item.Fishings.NpcType.Merchantlists.NpcTypes&lt;br&gt;Item.Fishings.NpcType.NpcEmotes&lt;br&gt;Item.Fishings.NpcType.NpcFactions&lt;br&gt;Item.Fishings.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Item.Fishings.NpcType.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.Fishings.NpcType.NpcSpell&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpell&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.Fishings.NpcType.NpcTypesTint&lt;br&gt;Item.Fishings.NpcType.Spawnentries&lt;br&gt;Item.Fishings.NpcType.Spawnentries.NpcType&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.Fishings.Zone&lt;br&gt;Item.Forages&lt;br&gt;Item.Forages.Item&lt;br&gt;Item.Forages.Zone&lt;br&gt;Item.GroundSpawns&lt;br&gt;Item.GroundSpawns.Zone&lt;br&gt;Item.ItemTicks&lt;br&gt;Item.Keyrings&lt;br&gt;Item.LootdropEntries&lt;br&gt;Item.LootdropEntries.Item&lt;br&gt;Item.LootdropEntries.Lootdrop&lt;br&gt;Item.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Lootdrop&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.LoottableEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.AlternateCurrency&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Loottable&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.Items&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.NpcTypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcEmotes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpell&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcTypesTint&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.NpcType&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.Merchantlists&lt;br&gt;Item.Merchantlists.Items&lt;br&gt;Item.Merchantlists.NpcTypes&lt;br&gt;Item.Merchantlists.NpcTypes.AlternateCurrency&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Item&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Lootdrop&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Loottable&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.NpcTypes&lt;br&gt;Item.Merchantlists.NpcTypes.Merchantlists&lt;br&gt;Item.Merchantlists.NpcTypes.NpcEmotes&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpell&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.Merchantlists.NpcTypes.NpcTypesTint&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.NpcType&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.ObjectContents&lt;br&gt;Item.Objects&lt;br&gt;Item.Objects.Item&lt;br&gt;Item.Objects.Zone&lt;br&gt;Item.StartingItems&lt;br&gt;Item.StartingItems.Item&lt;br&gt;Item.StartingItems.Zone&lt;br&gt;Item.Tasks&lt;br&gt;Item.Tasks.AlternateCurrency&lt;br&gt;Item.Tasks.TaskActivities&lt;br&gt;Item.Tasks.Tasksets&lt;br&gt;Item.TradeskillRecipeEntries&lt;br&gt;Item.TradeskillRecipeEntries.TradeskillRecipe&lt;br&gt;Item.TributeLevels
         * @param {string} [where] Filter on specific fields. Multiple conditions [.] separated Example: col_like_value.col2__val2
         * @param {string} [whereOr] Filter on specific fields (Chained ors). Multiple conditions [.] separated Example: col_like_value.col2__val2
         * @param {string} [groupBy] Group by field. Multiple conditions [.] separated Example: field1.field2
         * @param {string} [limit] Rows to limit in response (Default: 10,000)
         * @param {number} [page] Pagination page
         * @param {string} [orderBy] Order by [field]
         * @param {string} [orderDirection] Order by field direction
         * @param {string} [select] Column names [.] separated to fetch specific fields in response
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listAlternateCurrencies: async (includes?: string, where?: string, whereOr?: string, groupBy?: string, limit?: string, page?: number, orderBy?: string, orderDirection?: string, select?: string, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/alternate_currencies`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (includes !== undefined) {
                localVarQueryParameter['includes'] = includes;
            }

            if (where !== undefined) {
                localVarQueryParameter['where'] = where;
            }

            if (whereOr !== undefined) {
                localVarQueryParameter['whereOr'] = whereOr;
            }

            if (groupBy !== undefined) {
                localVarQueryParameter['groupBy'] = groupBy;
            }

            if (limit !== undefined) {
                localVarQueryParameter['limit'] = limit;
            }

            if (page !== undefined) {
                localVarQueryParameter['page'] = page;
            }

            if (orderBy !== undefined) {
                localVarQueryParameter['orderBy'] = orderBy;
            }

            if (orderDirection !== undefined) {
                localVarQueryParameter['orderDirection'] = orderDirection;
            }

            if (select !== undefined) {
                localVarQueryParameter['select'] = select;
            }


    
            const queryParameters = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                queryParameters.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.query) {
                queryParameters.set(key, options.query[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Updates AlternateCurrency
         * @param {number} id Id
         * @param {ModelsAlternateCurrency} alternateCurrency AlternateCurrency
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateAlternateCurrency: async (id: number, alternateCurrency: ModelsAlternateCurrency, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            if (id === null || id === undefined) {
                throw new RequiredError('id','Required parameter id was null or undefined when calling updateAlternateCurrency.');
            }
            // verify required parameter 'alternateCurrency' is not null or undefined
            if (alternateCurrency === null || alternateCurrency === undefined) {
                throw new RequiredError('alternateCurrency','Required parameter alternateCurrency was null or undefined when calling updateAlternateCurrency.');
            }
            const localVarPath = `/alternate_currency/{id}`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            const queryParameters = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                queryParameters.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.query) {
                queryParameters.set(key, options.query[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const nonString = typeof alternateCurrency !== 'string';
            const needsSerialization = nonString && configuration && configuration.isJsonMime
                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])
                : nonString;
            localVarRequestOptions.data =  needsSerialization
                ? JSON.stringify(alternateCurrency !== undefined ? alternateCurrency : {})
                : (alternateCurrency || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * AlternateCurrencyApi - functional programming interface
 * @export
 */
export const AlternateCurrencyApiFp = function(configuration?: Configuration) {
    return {
        /**
         * 
         * @summary Creates AlternateCurrency
         * @param {ModelsAlternateCurrency} alternateCurrency AlternateCurrency
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createAlternateCurrency(alternateCurrency: ModelsAlternateCurrency, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ModelsAlternateCurrency>>> {
            const localVarAxiosArgs = await AlternateCurrencyApiAxiosParamCreator(configuration).createAlternateCurrency(alternateCurrency, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * 
         * @summary Deletes AlternateCurrency
         * @param {number} id id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteAlternateCurrency(id: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {
            const localVarAxiosArgs = await AlternateCurrencyApiAxiosParamCreator(configuration).deleteAlternateCurrency(id, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * 
         * @summary Gets AlternateCurrencies in bulk
         * @param {CrudcontrollersBulkFetchByIdsGetRequest} body body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getAlternateCurrenciesBulk(body: CrudcontrollersBulkFetchByIdsGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ModelsAlternateCurrency>>> {
            const localVarAxiosArgs = await AlternateCurrencyApiAxiosParamCreator(configuration).getAlternateCurrenciesBulk(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * 
         * @summary Gets AlternateCurrency
         * @param {number} id Id
         * @param {string} [includes] Relationships [all] for all [number] for depth of relationships to load or [.] separated relationship names &lt;h4&gt;Relationships&lt;/h4&gt;Item&lt;br&gt;Item.AlternateCurrencies&lt;br&gt;Item.CharacterCorpseItems&lt;br&gt;Item.DiscoveredItems&lt;br&gt;Item.Doors&lt;br&gt;Item.Doors.Item&lt;br&gt;Item.Fishings&lt;br&gt;Item.Fishings.Item&lt;br&gt;Item.Fishings.NpcType&lt;br&gt;Item.Fishings.NpcType.AlternateCurrency&lt;br&gt;Item.Fishings.NpcType.Loottable&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Item&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Lootdrop&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Item.Fishings.NpcType.Loottable.NpcTypes&lt;br&gt;Item.Fishings.NpcType.Merchantlists&lt;br&gt;Item.Fishings.NpcType.Merchantlists.Items&lt;br&gt;Item.Fishings.NpcType.Merchantlists.NpcTypes&lt;br&gt;Item.Fishings.NpcType.NpcEmotes&lt;br&gt;Item.Fishings.NpcType.NpcFactions&lt;br&gt;Item.Fishings.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Item.Fishings.NpcType.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.Fishings.NpcType.NpcSpell&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpell&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.Fishings.NpcType.NpcTypesTint&lt;br&gt;Item.Fishings.NpcType.Spawnentries&lt;br&gt;Item.Fishings.NpcType.Spawnentries.NpcType&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.Fishings.Zone&lt;br&gt;Item.Forages&lt;br&gt;Item.Forages.Item&lt;br&gt;Item.Forages.Zone&lt;br&gt;Item.GroundSpawns&lt;br&gt;Item.GroundSpawns.Zone&lt;br&gt;Item.ItemTicks&lt;br&gt;Item.Keyrings&lt;br&gt;Item.LootdropEntries&lt;br&gt;Item.LootdropEntries.Item&lt;br&gt;Item.LootdropEntries.Lootdrop&lt;br&gt;Item.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Lootdrop&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.LoottableEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.AlternateCurrency&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Loottable&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.Items&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.NpcTypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcEmotes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpell&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcTypesTint&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.NpcType&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.Merchantlists&lt;br&gt;Item.Merchantlists.Items&lt;br&gt;Item.Merchantlists.NpcTypes&lt;br&gt;Item.Merchantlists.NpcTypes.AlternateCurrency&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Item&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Lootdrop&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Loottable&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.NpcTypes&lt;br&gt;Item.Merchantlists.NpcTypes.Merchantlists&lt;br&gt;Item.Merchantlists.NpcTypes.NpcEmotes&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpell&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.Merchantlists.NpcTypes.NpcTypesTint&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.NpcType&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.ObjectContents&lt;br&gt;Item.Objects&lt;br&gt;Item.Objects.Item&lt;br&gt;Item.Objects.Zone&lt;br&gt;Item.StartingItems&lt;br&gt;Item.StartingItems.Item&lt;br&gt;Item.StartingItems.Zone&lt;br&gt;Item.Tasks&lt;br&gt;Item.Tasks.AlternateCurrency&lt;br&gt;Item.Tasks.TaskActivities&lt;br&gt;Item.Tasks.Tasksets&lt;br&gt;Item.TradeskillRecipeEntries&lt;br&gt;Item.TradeskillRecipeEntries.TradeskillRecipe&lt;br&gt;Item.TributeLevels
         * @param {string} [select] Column names [.] separated to fetch specific fields in response
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getAlternateCurrency(id: number, includes?: string, select?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ModelsAlternateCurrency>>> {
            const localVarAxiosArgs = await AlternateCurrencyApiAxiosParamCreator(configuration).getAlternateCurrency(id, includes, select, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * 
         * @summary Lists AlternateCurrencies
         * @param {string} [includes] Relationships [all] for all [number] for depth of relationships to load or [.] separated relationship names &lt;h4&gt;Relationships&lt;/h4&gt;Item&lt;br&gt;Item.AlternateCurrencies&lt;br&gt;Item.CharacterCorpseItems&lt;br&gt;Item.DiscoveredItems&lt;br&gt;Item.Doors&lt;br&gt;Item.Doors.Item&lt;br&gt;Item.Fishings&lt;br&gt;Item.Fishings.Item&lt;br&gt;Item.Fishings.NpcType&lt;br&gt;Item.Fishings.NpcType.AlternateCurrency&lt;br&gt;Item.Fishings.NpcType.Loottable&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Item&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Lootdrop&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Item.Fishings.NpcType.Loottable.NpcTypes&lt;br&gt;Item.Fishings.NpcType.Merchantlists&lt;br&gt;Item.Fishings.NpcType.Merchantlists.Items&lt;br&gt;Item.Fishings.NpcType.Merchantlists.NpcTypes&lt;br&gt;Item.Fishings.NpcType.NpcEmotes&lt;br&gt;Item.Fishings.NpcType.NpcFactions&lt;br&gt;Item.Fishings.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Item.Fishings.NpcType.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.Fishings.NpcType.NpcSpell&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpell&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.Fishings.NpcType.NpcTypesTint&lt;br&gt;Item.Fishings.NpcType.Spawnentries&lt;br&gt;Item.Fishings.NpcType.Spawnentries.NpcType&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.Fishings.Zone&lt;br&gt;Item.Forages&lt;br&gt;Item.Forages.Item&lt;br&gt;Item.Forages.Zone&lt;br&gt;Item.GroundSpawns&lt;br&gt;Item.GroundSpawns.Zone&lt;br&gt;Item.ItemTicks&lt;br&gt;Item.Keyrings&lt;br&gt;Item.LootdropEntries&lt;br&gt;Item.LootdropEntries.Item&lt;br&gt;Item.LootdropEntries.Lootdrop&lt;br&gt;Item.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Lootdrop&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.LoottableEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.AlternateCurrency&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Loottable&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.Items&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.NpcTypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcEmotes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpell&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcTypesTint&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.NpcType&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.Merchantlists&lt;br&gt;Item.Merchantlists.Items&lt;br&gt;Item.Merchantlists.NpcTypes&lt;br&gt;Item.Merchantlists.NpcTypes.AlternateCurrency&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Item&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Lootdrop&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Loottable&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.NpcTypes&lt;br&gt;Item.Merchantlists.NpcTypes.Merchantlists&lt;br&gt;Item.Merchantlists.NpcTypes.NpcEmotes&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpell&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.Merchantlists.NpcTypes.NpcTypesTint&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.NpcType&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.ObjectContents&lt;br&gt;Item.Objects&lt;br&gt;Item.Objects.Item&lt;br&gt;Item.Objects.Zone&lt;br&gt;Item.StartingItems&lt;br&gt;Item.StartingItems.Item&lt;br&gt;Item.StartingItems.Zone&lt;br&gt;Item.Tasks&lt;br&gt;Item.Tasks.AlternateCurrency&lt;br&gt;Item.Tasks.TaskActivities&lt;br&gt;Item.Tasks.Tasksets&lt;br&gt;Item.TradeskillRecipeEntries&lt;br&gt;Item.TradeskillRecipeEntries.TradeskillRecipe&lt;br&gt;Item.TributeLevels
         * @param {string} [where] Filter on specific fields. Multiple conditions [.] separated Example: col_like_value.col2__val2
         * @param {string} [whereOr] Filter on specific fields (Chained ors). Multiple conditions [.] separated Example: col_like_value.col2__val2
         * @param {string} [groupBy] Group by field. Multiple conditions [.] separated Example: field1.field2
         * @param {string} [limit] Rows to limit in response (Default: 10,000)
         * @param {number} [page] Pagination page
         * @param {string} [orderBy] Order by [field]
         * @param {string} [orderDirection] Order by field direction
         * @param {string} [select] Column names [.] separated to fetch specific fields in response
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listAlternateCurrencies(includes?: string, where?: string, whereOr?: string, groupBy?: string, limit?: string, page?: number, orderBy?: string, orderDirection?: string, select?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ModelsAlternateCurrency>>> {
            const localVarAxiosArgs = await AlternateCurrencyApiAxiosParamCreator(configuration).listAlternateCurrencies(includes, where, whereOr, groupBy, limit, page, orderBy, orderDirection, select, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * 
         * @summary Updates AlternateCurrency
         * @param {number} id Id
         * @param {ModelsAlternateCurrency} alternateCurrency AlternateCurrency
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateAlternateCurrency(id: number, alternateCurrency: ModelsAlternateCurrency, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ModelsAlternateCurrency>>> {
            const localVarAxiosArgs = await AlternateCurrencyApiAxiosParamCreator(configuration).updateAlternateCurrency(id, alternateCurrency, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * AlternateCurrencyApi - factory interface
 * @export
 */
export const AlternateCurrencyApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * 
         * @summary Creates AlternateCurrency
         * @param {ModelsAlternateCurrency} alternateCurrency AlternateCurrency
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createAlternateCurrency(alternateCurrency: ModelsAlternateCurrency, options?: any): AxiosPromise<Array<ModelsAlternateCurrency>> {
            return AlternateCurrencyApiFp(configuration).createAlternateCurrency(alternateCurrency, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Deletes AlternateCurrency
         * @param {number} id id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteAlternateCurrency(id: number, options?: any): AxiosPromise<string> {
            return AlternateCurrencyApiFp(configuration).deleteAlternateCurrency(id, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Gets AlternateCurrencies in bulk
         * @param {CrudcontrollersBulkFetchByIdsGetRequest} body body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAlternateCurrenciesBulk(body: CrudcontrollersBulkFetchByIdsGetRequest, options?: any): AxiosPromise<Array<ModelsAlternateCurrency>> {
            return AlternateCurrencyApiFp(configuration).getAlternateCurrenciesBulk(body, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Gets AlternateCurrency
         * @param {number} id Id
         * @param {string} [includes] Relationships [all] for all [number] for depth of relationships to load or [.] separated relationship names &lt;h4&gt;Relationships&lt;/h4&gt;Item&lt;br&gt;Item.AlternateCurrencies&lt;br&gt;Item.CharacterCorpseItems&lt;br&gt;Item.DiscoveredItems&lt;br&gt;Item.Doors&lt;br&gt;Item.Doors.Item&lt;br&gt;Item.Fishings&lt;br&gt;Item.Fishings.Item&lt;br&gt;Item.Fishings.NpcType&lt;br&gt;Item.Fishings.NpcType.AlternateCurrency&lt;br&gt;Item.Fishings.NpcType.Loottable&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Item&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Lootdrop&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Item.Fishings.NpcType.Loottable.NpcTypes&lt;br&gt;Item.Fishings.NpcType.Merchantlists&lt;br&gt;Item.Fishings.NpcType.Merchantlists.Items&lt;br&gt;Item.Fishings.NpcType.Merchantlists.NpcTypes&lt;br&gt;Item.Fishings.NpcType.NpcEmotes&lt;br&gt;Item.Fishings.NpcType.NpcFactions&lt;br&gt;Item.Fishings.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Item.Fishings.NpcType.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.Fishings.NpcType.NpcSpell&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpell&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.Fishings.NpcType.NpcTypesTint&lt;br&gt;Item.Fishings.NpcType.Spawnentries&lt;br&gt;Item.Fishings.NpcType.Spawnentries.NpcType&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.Fishings.Zone&lt;br&gt;Item.Forages&lt;br&gt;Item.Forages.Item&lt;br&gt;Item.Forages.Zone&lt;br&gt;Item.GroundSpawns&lt;br&gt;Item.GroundSpawns.Zone&lt;br&gt;Item.ItemTicks&lt;br&gt;Item.Keyrings&lt;br&gt;Item.LootdropEntries&lt;br&gt;Item.LootdropEntries.Item&lt;br&gt;Item.LootdropEntries.Lootdrop&lt;br&gt;Item.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Lootdrop&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.LoottableEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.AlternateCurrency&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Loottable&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.Items&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.NpcTypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcEmotes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpell&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcTypesTint&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.NpcType&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.Merchantlists&lt;br&gt;Item.Merchantlists.Items&lt;br&gt;Item.Merchantlists.NpcTypes&lt;br&gt;Item.Merchantlists.NpcTypes.AlternateCurrency&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Item&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Lootdrop&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Loottable&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.NpcTypes&lt;br&gt;Item.Merchantlists.NpcTypes.Merchantlists&lt;br&gt;Item.Merchantlists.NpcTypes.NpcEmotes&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpell&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.Merchantlists.NpcTypes.NpcTypesTint&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.NpcType&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.ObjectContents&lt;br&gt;Item.Objects&lt;br&gt;Item.Objects.Item&lt;br&gt;Item.Objects.Zone&lt;br&gt;Item.StartingItems&lt;br&gt;Item.StartingItems.Item&lt;br&gt;Item.StartingItems.Zone&lt;br&gt;Item.Tasks&lt;br&gt;Item.Tasks.AlternateCurrency&lt;br&gt;Item.Tasks.TaskActivities&lt;br&gt;Item.Tasks.Tasksets&lt;br&gt;Item.TradeskillRecipeEntries&lt;br&gt;Item.TradeskillRecipeEntries.TradeskillRecipe&lt;br&gt;Item.TributeLevels
         * @param {string} [select] Column names [.] separated to fetch specific fields in response
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAlternateCurrency(id: number, includes?: string, select?: string, options?: any): AxiosPromise<Array<ModelsAlternateCurrency>> {
            return AlternateCurrencyApiFp(configuration).getAlternateCurrency(id, includes, select, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Lists AlternateCurrencies
         * @param {string} [includes] Relationships [all] for all [number] for depth of relationships to load or [.] separated relationship names &lt;h4&gt;Relationships&lt;/h4&gt;Item&lt;br&gt;Item.AlternateCurrencies&lt;br&gt;Item.CharacterCorpseItems&lt;br&gt;Item.DiscoveredItems&lt;br&gt;Item.Doors&lt;br&gt;Item.Doors.Item&lt;br&gt;Item.Fishings&lt;br&gt;Item.Fishings.Item&lt;br&gt;Item.Fishings.NpcType&lt;br&gt;Item.Fishings.NpcType.AlternateCurrency&lt;br&gt;Item.Fishings.NpcType.Loottable&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Item&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Lootdrop&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Item.Fishings.NpcType.Loottable.NpcTypes&lt;br&gt;Item.Fishings.NpcType.Merchantlists&lt;br&gt;Item.Fishings.NpcType.Merchantlists.Items&lt;br&gt;Item.Fishings.NpcType.Merchantlists.NpcTypes&lt;br&gt;Item.Fishings.NpcType.NpcEmotes&lt;br&gt;Item.Fishings.NpcType.NpcFactions&lt;br&gt;Item.Fishings.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Item.Fishings.NpcType.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.Fishings.NpcType.NpcSpell&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpell&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.Fishings.NpcType.NpcTypesTint&lt;br&gt;Item.Fishings.NpcType.Spawnentries&lt;br&gt;Item.Fishings.NpcType.Spawnentries.NpcType&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.Fishings.Zone&lt;br&gt;Item.Forages&lt;br&gt;Item.Forages.Item&lt;br&gt;Item.Forages.Zone&lt;br&gt;Item.GroundSpawns&lt;br&gt;Item.GroundSpawns.Zone&lt;br&gt;Item.ItemTicks&lt;br&gt;Item.Keyrings&lt;br&gt;Item.LootdropEntries&lt;br&gt;Item.LootdropEntries.Item&lt;br&gt;Item.LootdropEntries.Lootdrop&lt;br&gt;Item.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Lootdrop&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.LoottableEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.AlternateCurrency&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Loottable&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.Items&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.NpcTypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcEmotes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpell&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcTypesTint&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.NpcType&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.Merchantlists&lt;br&gt;Item.Merchantlists.Items&lt;br&gt;Item.Merchantlists.NpcTypes&lt;br&gt;Item.Merchantlists.NpcTypes.AlternateCurrency&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Item&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Lootdrop&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Loottable&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.NpcTypes&lt;br&gt;Item.Merchantlists.NpcTypes.Merchantlists&lt;br&gt;Item.Merchantlists.NpcTypes.NpcEmotes&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpell&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.Merchantlists.NpcTypes.NpcTypesTint&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.NpcType&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.ObjectContents&lt;br&gt;Item.Objects&lt;br&gt;Item.Objects.Item&lt;br&gt;Item.Objects.Zone&lt;br&gt;Item.StartingItems&lt;br&gt;Item.StartingItems.Item&lt;br&gt;Item.StartingItems.Zone&lt;br&gt;Item.Tasks&lt;br&gt;Item.Tasks.AlternateCurrency&lt;br&gt;Item.Tasks.TaskActivities&lt;br&gt;Item.Tasks.Tasksets&lt;br&gt;Item.TradeskillRecipeEntries&lt;br&gt;Item.TradeskillRecipeEntries.TradeskillRecipe&lt;br&gt;Item.TributeLevels
         * @param {string} [where] Filter on specific fields. Multiple conditions [.] separated Example: col_like_value.col2__val2
         * @param {string} [whereOr] Filter on specific fields (Chained ors). Multiple conditions [.] separated Example: col_like_value.col2__val2
         * @param {string} [groupBy] Group by field. Multiple conditions [.] separated Example: field1.field2
         * @param {string} [limit] Rows to limit in response (Default: 10,000)
         * @param {number} [page] Pagination page
         * @param {string} [orderBy] Order by [field]
         * @param {string} [orderDirection] Order by field direction
         * @param {string} [select] Column names [.] separated to fetch specific fields in response
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listAlternateCurrencies(includes?: string, where?: string, whereOr?: string, groupBy?: string, limit?: string, page?: number, orderBy?: string, orderDirection?: string, select?: string, options?: any): AxiosPromise<Array<ModelsAlternateCurrency>> {
            return AlternateCurrencyApiFp(configuration).listAlternateCurrencies(includes, where, whereOr, groupBy, limit, page, orderBy, orderDirection, select, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Updates AlternateCurrency
         * @param {number} id Id
         * @param {ModelsAlternateCurrency} alternateCurrency AlternateCurrency
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateAlternateCurrency(id: number, alternateCurrency: ModelsAlternateCurrency, options?: any): AxiosPromise<Array<ModelsAlternateCurrency>> {
            return AlternateCurrencyApiFp(configuration).updateAlternateCurrency(id, alternateCurrency, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createAlternateCurrency operation in AlternateCurrencyApi.
 * @export
 * @interface AlternateCurrencyApiCreateAlternateCurrencyRequest
 */
export interface AlternateCurrencyApiCreateAlternateCurrencyRequest {
    /**
     * AlternateCurrency
     * @type {ModelsAlternateCurrency}
     * @memberof AlternateCurrencyApiCreateAlternateCurrency
     */
    readonly alternateCurrency: ModelsAlternateCurrency
}

/**
 * Request parameters for deleteAlternateCurrency operation in AlternateCurrencyApi.
 * @export
 * @interface AlternateCurrencyApiDeleteAlternateCurrencyRequest
 */
export interface AlternateCurrencyApiDeleteAlternateCurrencyRequest {
    /**
     * id
     * @type {number}
     * @memberof AlternateCurrencyApiDeleteAlternateCurrency
     */
    readonly id: number
}

/**
 * Request parameters for getAlternateCurrenciesBulk operation in AlternateCurrencyApi.
 * @export
 * @interface AlternateCurrencyApiGetAlternateCurrenciesBulkRequest
 */
export interface AlternateCurrencyApiGetAlternateCurrenciesBulkRequest {
    /**
     * body
     * @type {CrudcontrollersBulkFetchByIdsGetRequest}
     * @memberof AlternateCurrencyApiGetAlternateCurrenciesBulk
     */
    readonly body: CrudcontrollersBulkFetchByIdsGetRequest
}

/**
 * Request parameters for getAlternateCurrency operation in AlternateCurrencyApi.
 * @export
 * @interface AlternateCurrencyApiGetAlternateCurrencyRequest
 */
export interface AlternateCurrencyApiGetAlternateCurrencyRequest {
    /**
     * Id
     * @type {number}
     * @memberof AlternateCurrencyApiGetAlternateCurrency
     */
    readonly id: number

    /**
     * Relationships [all] for all [number] for depth of relationships to load or [.] separated relationship names &lt;h4&gt;Relationships&lt;/h4&gt;Item&lt;br&gt;Item.AlternateCurrencies&lt;br&gt;Item.CharacterCorpseItems&lt;br&gt;Item.DiscoveredItems&lt;br&gt;Item.Doors&lt;br&gt;Item.Doors.Item&lt;br&gt;Item.Fishings&lt;br&gt;Item.Fishings.Item&lt;br&gt;Item.Fishings.NpcType&lt;br&gt;Item.Fishings.NpcType.AlternateCurrency&lt;br&gt;Item.Fishings.NpcType.Loottable&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Item&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Lootdrop&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Item.Fishings.NpcType.Loottable.NpcTypes&lt;br&gt;Item.Fishings.NpcType.Merchantlists&lt;br&gt;Item.Fishings.NpcType.Merchantlists.Items&lt;br&gt;Item.Fishings.NpcType.Merchantlists.NpcTypes&lt;br&gt;Item.Fishings.NpcType.NpcEmotes&lt;br&gt;Item.Fishings.NpcType.NpcFactions&lt;br&gt;Item.Fishings.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Item.Fishings.NpcType.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.Fishings.NpcType.NpcSpell&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpell&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.Fishings.NpcType.NpcTypesTint&lt;br&gt;Item.Fishings.NpcType.Spawnentries&lt;br&gt;Item.Fishings.NpcType.Spawnentries.NpcType&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.Fishings.Zone&lt;br&gt;Item.Forages&lt;br&gt;Item.Forages.Item&lt;br&gt;Item.Forages.Zone&lt;br&gt;Item.GroundSpawns&lt;br&gt;Item.GroundSpawns.Zone&lt;br&gt;Item.ItemTicks&lt;br&gt;Item.Keyrings&lt;br&gt;Item.LootdropEntries&lt;br&gt;Item.LootdropEntries.Item&lt;br&gt;Item.LootdropEntries.Lootdrop&lt;br&gt;Item.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Lootdrop&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.LoottableEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.AlternateCurrency&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Loottable&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.Items&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.NpcTypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcEmotes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpell&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcTypesTint&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.NpcType&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.Merchantlists&lt;br&gt;Item.Merchantlists.Items&lt;br&gt;Item.Merchantlists.NpcTypes&lt;br&gt;Item.Merchantlists.NpcTypes.AlternateCurrency&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Item&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Lootdrop&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Loottable&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.NpcTypes&lt;br&gt;Item.Merchantlists.NpcTypes.Merchantlists&lt;br&gt;Item.Merchantlists.NpcTypes.NpcEmotes&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpell&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.Merchantlists.NpcTypes.NpcTypesTint&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.NpcType&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.ObjectContents&lt;br&gt;Item.Objects&lt;br&gt;Item.Objects.Item&lt;br&gt;Item.Objects.Zone&lt;br&gt;Item.StartingItems&lt;br&gt;Item.StartingItems.Item&lt;br&gt;Item.StartingItems.Zone&lt;br&gt;Item.Tasks&lt;br&gt;Item.Tasks.AlternateCurrency&lt;br&gt;Item.Tasks.TaskActivities&lt;br&gt;Item.Tasks.Tasksets&lt;br&gt;Item.TradeskillRecipeEntries&lt;br&gt;Item.TradeskillRecipeEntries.TradeskillRecipe&lt;br&gt;Item.TributeLevels
     * @type {string}
     * @memberof AlternateCurrencyApiGetAlternateCurrency
     */
    readonly includes?: string

    /**
     * Column names [.] separated to fetch specific fields in response
     * @type {string}
     * @memberof AlternateCurrencyApiGetAlternateCurrency
     */
    readonly select?: string
}

/**
 * Request parameters for listAlternateCurrencies operation in AlternateCurrencyApi.
 * @export
 * @interface AlternateCurrencyApiListAlternateCurrenciesRequest
 */
export interface AlternateCurrencyApiListAlternateCurrenciesRequest {
    /**
     * Relationships [all] for all [number] for depth of relationships to load or [.] separated relationship names &lt;h4&gt;Relationships&lt;/h4&gt;Item&lt;br&gt;Item.AlternateCurrencies&lt;br&gt;Item.CharacterCorpseItems&lt;br&gt;Item.DiscoveredItems&lt;br&gt;Item.Doors&lt;br&gt;Item.Doors.Item&lt;br&gt;Item.Fishings&lt;br&gt;Item.Fishings.Item&lt;br&gt;Item.Fishings.NpcType&lt;br&gt;Item.Fishings.NpcType.AlternateCurrency&lt;br&gt;Item.Fishings.NpcType.Loottable&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Item&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Lootdrop&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.Fishings.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Item.Fishings.NpcType.Loottable.NpcTypes&lt;br&gt;Item.Fishings.NpcType.Merchantlists&lt;br&gt;Item.Fishings.NpcType.Merchantlists.Items&lt;br&gt;Item.Fishings.NpcType.Merchantlists.NpcTypes&lt;br&gt;Item.Fishings.NpcType.NpcEmotes&lt;br&gt;Item.Fishings.NpcType.NpcFactions&lt;br&gt;Item.Fishings.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Item.Fishings.NpcType.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.Fishings.NpcType.NpcSpell&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpell&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.Fishings.NpcType.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.Fishings.NpcType.NpcTypesTint&lt;br&gt;Item.Fishings.NpcType.Spawnentries&lt;br&gt;Item.Fishings.NpcType.Spawnentries.NpcType&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.Fishings.Zone&lt;br&gt;Item.Forages&lt;br&gt;Item.Forages.Item&lt;br&gt;Item.Forages.Zone&lt;br&gt;Item.GroundSpawns&lt;br&gt;Item.GroundSpawns.Zone&lt;br&gt;Item.ItemTicks&lt;br&gt;Item.Keyrings&lt;br&gt;Item.LootdropEntries&lt;br&gt;Item.LootdropEntries.Item&lt;br&gt;Item.LootdropEntries.Lootdrop&lt;br&gt;Item.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Lootdrop&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.LoottableEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.AlternateCurrency&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Loottable&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.Items&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.NpcTypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcEmotes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpell&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcTypesTint&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.NpcType&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.Merchantlists&lt;br&gt;Item.Merchantlists.Items&lt;br&gt;Item.Merchantlists.NpcTypes&lt;br&gt;Item.Merchantlists.NpcTypes.AlternateCurrency&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Item&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LootdropEntries.Lootdrop&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Lootdrop.LoottableEntries&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.LoottableEntries.Loottable&lt;br&gt;Item.Merchantlists.NpcTypes.Loottable.NpcTypes&lt;br&gt;Item.Merchantlists.NpcTypes.Merchantlists&lt;br&gt;Item.Merchantlists.NpcTypes.NpcEmotes&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcFactions.NpcFactionEntries.FactionList&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpell&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Aura.SpellsNew&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.BlockedSpells&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Damageshieldtypes&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.Items&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.NpcSpellsEntries&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellBuckets&lt;br&gt;Item.Merchantlists.NpcTypes.NpcSpell.NpcSpellsEntries.SpellsNew.SpellGlobals&lt;br&gt;Item.Merchantlists.NpcTypes.NpcTypesTint&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.NpcType&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Item.Merchantlists.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Item.ObjectContents&lt;br&gt;Item.Objects&lt;br&gt;Item.Objects.Item&lt;br&gt;Item.Objects.Zone&lt;br&gt;Item.StartingItems&lt;br&gt;Item.StartingItems.Item&lt;br&gt;Item.StartingItems.Zone&lt;br&gt;Item.Tasks&lt;br&gt;Item.Tasks.AlternateCurrency&lt;br&gt;Item.Tasks.TaskActivities&lt;br&gt;Item.Tasks.Tasksets&lt;br&gt;Item.TradeskillRecipeEntries&lt;br&gt;Item.TradeskillRecipeEntries.TradeskillRecipe&lt;br&gt;Item.TributeLevels
     * @type {string}
     * @memberof AlternateCurrencyApiListAlternateCurrencies
     */
    readonly includes?: string

    /**
     * Filter on specific fields. Multiple conditions [.] separated Example: col_like_value.col2__val2
     * @type {string}
     * @memberof AlternateCurrencyApiListAlternateCurrencies
     */
    readonly where?: string

    /**
     * Filter on specific fields (Chained ors). Multiple conditions [.] separated Example: col_like_value.col2__val2
     * @type {string}
     * @memberof AlternateCurrencyApiListAlternateCurrencies
     */
    readonly whereOr?: string

    /**
     * Group by field. Multiple conditions [.] separated Example: field1.field2
     * @type {string}
     * @memberof AlternateCurrencyApiListAlternateCurrencies
     */
    readonly groupBy?: string

    /**
     * Rows to limit in response (Default: 10,000)
     * @type {string}
     * @memberof AlternateCurrencyApiListAlternateCurrencies
     */
    readonly limit?: string

    /**
     * Pagination page
     * @type {number}
     * @memberof AlternateCurrencyApiListAlternateCurrencies
     */
    readonly page?: number

    /**
     * Order by [field]
     * @type {string}
     * @memberof AlternateCurrencyApiListAlternateCurrencies
     */
    readonly orderBy?: string

    /**
     * Order by field direction
     * @type {string}
     * @memberof AlternateCurrencyApiListAlternateCurrencies
     */
    readonly orderDirection?: string

    /**
     * Column names [.] separated to fetch specific fields in response
     * @type {string}
     * @memberof AlternateCurrencyApiListAlternateCurrencies
     */
    readonly select?: string
}

/**
 * Request parameters for updateAlternateCurrency operation in AlternateCurrencyApi.
 * @export
 * @interface AlternateCurrencyApiUpdateAlternateCurrencyRequest
 */
export interface AlternateCurrencyApiUpdateAlternateCurrencyRequest {
    /**
     * Id
     * @type {number}
     * @memberof AlternateCurrencyApiUpdateAlternateCurrency
     */
    readonly id: number

    /**
     * AlternateCurrency
     * @type {ModelsAlternateCurrency}
     * @memberof AlternateCurrencyApiUpdateAlternateCurrency
     */
    readonly alternateCurrency: ModelsAlternateCurrency
}

/**
 * AlternateCurrencyApi - object-oriented interface
 * @export
 * @class AlternateCurrencyApi
 * @extends {BaseAPI}
 */
export class AlternateCurrencyApi extends BaseAPI {
    /**
     * 
     * @summary Creates AlternateCurrency
     * @param {AlternateCurrencyApiCreateAlternateCurrencyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AlternateCurrencyApi
     */
    public createAlternateCurrency(requestParameters: AlternateCurrencyApiCreateAlternateCurrencyRequest, options?: any) {
        return AlternateCurrencyApiFp(this.configuration).createAlternateCurrency(requestParameters.alternateCurrency, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Deletes AlternateCurrency
     * @param {AlternateCurrencyApiDeleteAlternateCurrencyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AlternateCurrencyApi
     */
    public deleteAlternateCurrency(requestParameters: AlternateCurrencyApiDeleteAlternateCurrencyRequest, options?: any) {
        return AlternateCurrencyApiFp(this.configuration).deleteAlternateCurrency(requestParameters.id, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Gets AlternateCurrencies in bulk
     * @param {AlternateCurrencyApiGetAlternateCurrenciesBulkRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AlternateCurrencyApi
     */
    public getAlternateCurrenciesBulk(requestParameters: AlternateCurrencyApiGetAlternateCurrenciesBulkRequest, options?: any) {
        return AlternateCurrencyApiFp(this.configuration).getAlternateCurrenciesBulk(requestParameters.body, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Gets AlternateCurrency
     * @param {AlternateCurrencyApiGetAlternateCurrencyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AlternateCurrencyApi
     */
    public getAlternateCurrency(requestParameters: AlternateCurrencyApiGetAlternateCurrencyRequest, options?: any) {
        return AlternateCurrencyApiFp(this.configuration).getAlternateCurrency(requestParameters.id, requestParameters.includes, requestParameters.select, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Lists AlternateCurrencies
     * @param {AlternateCurrencyApiListAlternateCurrenciesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AlternateCurrencyApi
     */
    public listAlternateCurrencies(requestParameters: AlternateCurrencyApiListAlternateCurrenciesRequest = {}, options?: any) {
        return AlternateCurrencyApiFp(this.configuration).listAlternateCurrencies(requestParameters.includes, requestParameters.where, requestParameters.whereOr, requestParameters.groupBy, requestParameters.limit, requestParameters.page, requestParameters.orderBy, requestParameters.orderDirection, requestParameters.select, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Updates AlternateCurrency
     * @param {AlternateCurrencyApiUpdateAlternateCurrencyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AlternateCurrencyApi
     */
    public updateAlternateCurrency(requestParameters: AlternateCurrencyApiUpdateAlternateCurrencyRequest, options?: any) {
        return AlternateCurrencyApiFp(this.configuration).updateAlternateCurrency(requestParameters.id, requestParameters.alternateCurrency, options).then((request) => request(this.axios, this.basePath));
    }
}

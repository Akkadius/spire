/* tslint:disable */
/* eslint-disable */
/**
 * Spire
 * Spire API documentation
 *
 * The version of the OpenAPI document: 3.0
 * Contact: akkadius1@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { CrudcontrollersBulkFetchByIdsGetRequest } from '../models';
// @ts-ignore
import { ModelsCharacterDatum } from '../models';
/**
 * CharacterDatumApi - axios parameter creator
 * @export
 */
export const CharacterDatumApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * 
         * @summary Creates CharacterDatum
         * @param {ModelsCharacterDatum} characterDatum CharacterDatum
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCharacterDatum: async (characterDatum: ModelsCharacterDatum, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'characterDatum' is not null or undefined
            if (characterDatum === null || characterDatum === undefined) {
                throw new RequiredError('characterDatum','Required parameter characterDatum was null or undefined when calling createCharacterDatum.');
            }
            const localVarPath = `/character_datum`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            const queryParameters = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                queryParameters.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.query) {
                queryParameters.set(key, options.query[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const nonString = typeof characterDatum !== 'string';
            const needsSerialization = nonString && configuration && configuration.isJsonMime
                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])
                : nonString;
            localVarRequestOptions.data =  needsSerialization
                ? JSON.stringify(characterDatum !== undefined ? characterDatum : {})
                : (characterDatum || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Deletes CharacterDatum
         * @param {number} id id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCharacterDatum: async (id: number, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            if (id === null || id === undefined) {
                throw new RequiredError('id','Required parameter id was null or undefined when calling deleteCharacterDatum.');
            }
            const localVarPath = `/character_datum/{id}`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            const queryParameters = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                queryParameters.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.query) {
                queryParameters.set(key, options.query[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Gets CharacterData in bulk
         * @param {CrudcontrollersBulkFetchByIdsGetRequest} body body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCharacterDataBulk: async (body: CrudcontrollersBulkFetchByIdsGetRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            if (body === null || body === undefined) {
                throw new RequiredError('body','Required parameter body was null or undefined when calling getCharacterDataBulk.');
            }
            const localVarPath = `/character_data/bulk`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            const queryParameters = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                queryParameters.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.query) {
                queryParameters.set(key, options.query[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const nonString = typeof body !== 'string';
            const needsSerialization = nonString && configuration && configuration.isJsonMime
                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])
                : nonString;
            localVarRequestOptions.data =  needsSerialization
                ? JSON.stringify(body !== undefined ? body : {})
                : (body || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Gets CharacterDatum
         * @param {number} id Id
         * @param {string} [includes] Relationships [all] for all [number] for depth of relationships to load or [.] separated relationship names &lt;h4&gt;Relationships&lt;/h4&gt;AdventureStats&lt;br&gt;Buyers&lt;br&gt;CharRecipeLists&lt;br&gt;CharacterActivities&lt;br&gt;CharacterAltCurrencies&lt;br&gt;CharacterAlternateAbilities&lt;br&gt;CharacterAuras&lt;br&gt;CharacterBandoliers&lt;br&gt;CharacterBinds&lt;br&gt;CharacterBuffs&lt;br&gt;CharacterCorpses&lt;br&gt;CharacterCurrencies&lt;br&gt;CharacterDisciplines&lt;br&gt;CharacterEnabledtasks&lt;br&gt;CharacterInspectMessages&lt;br&gt;CharacterItemRecasts&lt;br&gt;CharacterLanguages&lt;br&gt;CharacterLeadershipAbilities&lt;br&gt;CharacterMaterials&lt;br&gt;CharacterMemmedSpells&lt;br&gt;CharacterPetBuffs&lt;br&gt;CharacterPetInfos&lt;br&gt;CharacterPetInventories&lt;br&gt;CharacterPotionbelts&lt;br&gt;CharacterSkills&lt;br&gt;CharacterSpells&lt;br&gt;CharacterTasks&lt;br&gt;CharacterTributes&lt;br&gt;CompletedTasks&lt;br&gt;DataBuckets&lt;br&gt;FactionValues&lt;br&gt;Friends&lt;br&gt;Guild&lt;br&gt;Guild.GuildBanks&lt;br&gt;Guild.GuildMembers&lt;br&gt;Guild.GuildRanks&lt;br&gt;GuildMembers&lt;br&gt;InstanceListPlayers&lt;br&gt;Inventories&lt;br&gt;Inventories.Item&lt;br&gt;Inventories.Item.AlternateCurrencies&lt;br&gt;Inventories.Item.CharacterCorpseItems&lt;br&gt;Inventories.Item.DiscoveredItems&lt;br&gt;Inventories.Item.Doors&lt;br&gt;Inventories.Item.Doors.Item&lt;br&gt;Inventories.Item.Fishings&lt;br&gt;Inventories.Item.Fishings.Item&lt;br&gt;Inventories.Item.Fishings.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Fishings.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Fishings.NpcType.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Fishings.Zone&lt;br&gt;Inventories.Item.Forages&lt;br&gt;Inventories.Item.Forages.Item&lt;br&gt;Inventories.Item.Forages.Zone&lt;br&gt;Inventories.Item.GroundSpawns&lt;br&gt;Inventories.Item.GroundSpawns.Zone&lt;br&gt;Inventories.Item.ItemTicks&lt;br&gt;Inventories.Item.Keyrings&lt;br&gt;Inventories.Item.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Item&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.AlternateCurrency&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Loottable&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.NpcType&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcEmotes&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpells&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcTypesTint&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.NpcType&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Merchantlists&lt;br&gt;Inventories.Item.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Merchantlists.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.ObjectContents&lt;br&gt;Inventories.Item.Objects&lt;br&gt;Inventories.Item.Objects.Item&lt;br&gt;Inventories.Item.Objects.Zone&lt;br&gt;Inventories.Item.StartingItems&lt;br&gt;Inventories.Item.StartingItems.Item&lt;br&gt;Inventories.Item.StartingItems.Zone&lt;br&gt;Inventories.Item.Tasks&lt;br&gt;Inventories.Item.Tasks.TaskActivities&lt;br&gt;Inventories.Item.Tasks.TaskActivities.Goallists&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Tasks.Tasksets&lt;br&gt;Inventories.Item.TradeskillRecipeEntries&lt;br&gt;Inventories.Item.TradeskillRecipeEntries.TradeskillRecipe&lt;br&gt;Inventories.Item.TributeLevels&lt;br&gt;Keyrings&lt;br&gt;Mail&lt;br&gt;PlayerTitlesets&lt;br&gt;QuestGlobals&lt;br&gt;Timers&lt;br&gt;Titles&lt;br&gt;Traders&lt;br&gt;ZoneFlags
         * @param {string} [select] Column names [.] separated to fetch specific fields in response
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCharacterDatum: async (id: number, includes?: string, select?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            if (id === null || id === undefined) {
                throw new RequiredError('id','Required parameter id was null or undefined when calling getCharacterDatum.');
            }
            const localVarPath = `/character_datum/{id}`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (includes !== undefined) {
                localVarQueryParameter['includes'] = includes;
            }

            if (select !== undefined) {
                localVarQueryParameter['select'] = select;
            }


    
            const queryParameters = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                queryParameters.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.query) {
                queryParameters.set(key, options.query[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Lists CharacterData
         * @param {string} [includes] Relationships [all] for all [number] for depth of relationships to load or [.] separated relationship names &lt;h4&gt;Relationships&lt;/h4&gt;AdventureStats&lt;br&gt;Buyers&lt;br&gt;CharRecipeLists&lt;br&gt;CharacterActivities&lt;br&gt;CharacterAltCurrencies&lt;br&gt;CharacterAlternateAbilities&lt;br&gt;CharacterAuras&lt;br&gt;CharacterBandoliers&lt;br&gt;CharacterBinds&lt;br&gt;CharacterBuffs&lt;br&gt;CharacterCorpses&lt;br&gt;CharacterCurrencies&lt;br&gt;CharacterDisciplines&lt;br&gt;CharacterEnabledtasks&lt;br&gt;CharacterInspectMessages&lt;br&gt;CharacterItemRecasts&lt;br&gt;CharacterLanguages&lt;br&gt;CharacterLeadershipAbilities&lt;br&gt;CharacterMaterials&lt;br&gt;CharacterMemmedSpells&lt;br&gt;CharacterPetBuffs&lt;br&gt;CharacterPetInfos&lt;br&gt;CharacterPetInventories&lt;br&gt;CharacterPotionbelts&lt;br&gt;CharacterSkills&lt;br&gt;CharacterSpells&lt;br&gt;CharacterTasks&lt;br&gt;CharacterTributes&lt;br&gt;CompletedTasks&lt;br&gt;DataBuckets&lt;br&gt;FactionValues&lt;br&gt;Friends&lt;br&gt;Guild&lt;br&gt;Guild.GuildBanks&lt;br&gt;Guild.GuildMembers&lt;br&gt;Guild.GuildRanks&lt;br&gt;GuildMembers&lt;br&gt;InstanceListPlayers&lt;br&gt;Inventories&lt;br&gt;Inventories.Item&lt;br&gt;Inventories.Item.AlternateCurrencies&lt;br&gt;Inventories.Item.CharacterCorpseItems&lt;br&gt;Inventories.Item.DiscoveredItems&lt;br&gt;Inventories.Item.Doors&lt;br&gt;Inventories.Item.Doors.Item&lt;br&gt;Inventories.Item.Fishings&lt;br&gt;Inventories.Item.Fishings.Item&lt;br&gt;Inventories.Item.Fishings.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Fishings.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Fishings.NpcType.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Fishings.Zone&lt;br&gt;Inventories.Item.Forages&lt;br&gt;Inventories.Item.Forages.Item&lt;br&gt;Inventories.Item.Forages.Zone&lt;br&gt;Inventories.Item.GroundSpawns&lt;br&gt;Inventories.Item.GroundSpawns.Zone&lt;br&gt;Inventories.Item.ItemTicks&lt;br&gt;Inventories.Item.Keyrings&lt;br&gt;Inventories.Item.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Item&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.AlternateCurrency&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Loottable&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.NpcType&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcEmotes&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpells&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcTypesTint&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.NpcType&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Merchantlists&lt;br&gt;Inventories.Item.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Merchantlists.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.ObjectContents&lt;br&gt;Inventories.Item.Objects&lt;br&gt;Inventories.Item.Objects.Item&lt;br&gt;Inventories.Item.Objects.Zone&lt;br&gt;Inventories.Item.StartingItems&lt;br&gt;Inventories.Item.StartingItems.Item&lt;br&gt;Inventories.Item.StartingItems.Zone&lt;br&gt;Inventories.Item.Tasks&lt;br&gt;Inventories.Item.Tasks.TaskActivities&lt;br&gt;Inventories.Item.Tasks.TaskActivities.Goallists&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Tasks.Tasksets&lt;br&gt;Inventories.Item.TradeskillRecipeEntries&lt;br&gt;Inventories.Item.TradeskillRecipeEntries.TradeskillRecipe&lt;br&gt;Inventories.Item.TributeLevels&lt;br&gt;Keyrings&lt;br&gt;Mail&lt;br&gt;PlayerTitlesets&lt;br&gt;QuestGlobals&lt;br&gt;Timers&lt;br&gt;Titles&lt;br&gt;Traders&lt;br&gt;ZoneFlags
         * @param {string} [where] Filter on specific fields. Multiple conditions [.] separated Example: col_like_value.col2__val2
         * @param {string} [whereOr] Filter on specific fields (Chained ors). Multiple conditions [.] separated Example: col_like_value.col2__val2
         * @param {string} [groupBy] Group by field. Multiple conditions [.] separated Example: field1.field2
         * @param {string} [limit] Rows to limit in response (Default: 10,000)
         * @param {string} [orderBy] Order by [field]
         * @param {string} [orderDirection] Order by field direction
         * @param {string} [select] Column names [.] separated to fetch specific fields in response
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listCharacterData: async (includes?: string, where?: string, whereOr?: string, groupBy?: string, limit?: string, orderBy?: string, orderDirection?: string, select?: string, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/character_data`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (includes !== undefined) {
                localVarQueryParameter['includes'] = includes;
            }

            if (where !== undefined) {
                localVarQueryParameter['where'] = where;
            }

            if (whereOr !== undefined) {
                localVarQueryParameter['whereOr'] = whereOr;
            }

            if (groupBy !== undefined) {
                localVarQueryParameter['groupBy'] = groupBy;
            }

            if (limit !== undefined) {
                localVarQueryParameter['limit'] = limit;
            }

            if (orderBy !== undefined) {
                localVarQueryParameter['orderBy'] = orderBy;
            }

            if (orderDirection !== undefined) {
                localVarQueryParameter['orderDirection'] = orderDirection;
            }

            if (select !== undefined) {
                localVarQueryParameter['select'] = select;
            }


    
            const queryParameters = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                queryParameters.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.query) {
                queryParameters.set(key, options.query[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Updates CharacterDatum
         * @param {number} id Id
         * @param {ModelsCharacterDatum} characterDatum CharacterDatum
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateCharacterDatum: async (id: number, characterDatum: ModelsCharacterDatum, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'id' is not null or undefined
            if (id === null || id === undefined) {
                throw new RequiredError('id','Required parameter id was null or undefined when calling updateCharacterDatum.');
            }
            // verify required parameter 'characterDatum' is not null or undefined
            if (characterDatum === null || characterDatum === undefined) {
                throw new RequiredError('characterDatum','Required parameter characterDatum was null or undefined when calling updateCharacterDatum.');
            }
            const localVarPath = `/character_datum/{id}`
                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, 'https://example.com');
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            const queryParameters = new URLSearchParams(localVarUrlObj.search);
            for (const key in localVarQueryParameter) {
                queryParameters.set(key, localVarQueryParameter[key]);
            }
            for (const key in options.query) {
                queryParameters.set(key, options.query[key]);
            }
            localVarUrlObj.search = (new URLSearchParams(queryParameters)).toString();
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            const nonString = typeof characterDatum !== 'string';
            const needsSerialization = nonString && configuration && configuration.isJsonMime
                ? configuration.isJsonMime(localVarRequestOptions.headers['Content-Type'])
                : nonString;
            localVarRequestOptions.data =  needsSerialization
                ? JSON.stringify(characterDatum !== undefined ? characterDatum : {})
                : (characterDatum || "");

            return {
                url: localVarUrlObj.pathname + localVarUrlObj.search + localVarUrlObj.hash,
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CharacterDatumApi - functional programming interface
 * @export
 */
export const CharacterDatumApiFp = function(configuration?: Configuration) {
    return {
        /**
         * 
         * @summary Creates CharacterDatum
         * @param {ModelsCharacterDatum} characterDatum CharacterDatum
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createCharacterDatum(characterDatum: ModelsCharacterDatum, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ModelsCharacterDatum>>> {
            const localVarAxiosArgs = await CharacterDatumApiAxiosParamCreator(configuration).createCharacterDatum(characterDatum, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * 
         * @summary Deletes CharacterDatum
         * @param {number} id id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteCharacterDatum(id: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<string>> {
            const localVarAxiosArgs = await CharacterDatumApiAxiosParamCreator(configuration).deleteCharacterDatum(id, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * 
         * @summary Gets CharacterData in bulk
         * @param {CrudcontrollersBulkFetchByIdsGetRequest} body body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCharacterDataBulk(body: CrudcontrollersBulkFetchByIdsGetRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ModelsCharacterDatum>>> {
            const localVarAxiosArgs = await CharacterDatumApiAxiosParamCreator(configuration).getCharacterDataBulk(body, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * 
         * @summary Gets CharacterDatum
         * @param {number} id Id
         * @param {string} [includes] Relationships [all] for all [number] for depth of relationships to load or [.] separated relationship names &lt;h4&gt;Relationships&lt;/h4&gt;AdventureStats&lt;br&gt;Buyers&lt;br&gt;CharRecipeLists&lt;br&gt;CharacterActivities&lt;br&gt;CharacterAltCurrencies&lt;br&gt;CharacterAlternateAbilities&lt;br&gt;CharacterAuras&lt;br&gt;CharacterBandoliers&lt;br&gt;CharacterBinds&lt;br&gt;CharacterBuffs&lt;br&gt;CharacterCorpses&lt;br&gt;CharacterCurrencies&lt;br&gt;CharacterDisciplines&lt;br&gt;CharacterEnabledtasks&lt;br&gt;CharacterInspectMessages&lt;br&gt;CharacterItemRecasts&lt;br&gt;CharacterLanguages&lt;br&gt;CharacterLeadershipAbilities&lt;br&gt;CharacterMaterials&lt;br&gt;CharacterMemmedSpells&lt;br&gt;CharacterPetBuffs&lt;br&gt;CharacterPetInfos&lt;br&gt;CharacterPetInventories&lt;br&gt;CharacterPotionbelts&lt;br&gt;CharacterSkills&lt;br&gt;CharacterSpells&lt;br&gt;CharacterTasks&lt;br&gt;CharacterTributes&lt;br&gt;CompletedTasks&lt;br&gt;DataBuckets&lt;br&gt;FactionValues&lt;br&gt;Friends&lt;br&gt;Guild&lt;br&gt;Guild.GuildBanks&lt;br&gt;Guild.GuildMembers&lt;br&gt;Guild.GuildRanks&lt;br&gt;GuildMembers&lt;br&gt;InstanceListPlayers&lt;br&gt;Inventories&lt;br&gt;Inventories.Item&lt;br&gt;Inventories.Item.AlternateCurrencies&lt;br&gt;Inventories.Item.CharacterCorpseItems&lt;br&gt;Inventories.Item.DiscoveredItems&lt;br&gt;Inventories.Item.Doors&lt;br&gt;Inventories.Item.Doors.Item&lt;br&gt;Inventories.Item.Fishings&lt;br&gt;Inventories.Item.Fishings.Item&lt;br&gt;Inventories.Item.Fishings.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Fishings.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Fishings.NpcType.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Fishings.Zone&lt;br&gt;Inventories.Item.Forages&lt;br&gt;Inventories.Item.Forages.Item&lt;br&gt;Inventories.Item.Forages.Zone&lt;br&gt;Inventories.Item.GroundSpawns&lt;br&gt;Inventories.Item.GroundSpawns.Zone&lt;br&gt;Inventories.Item.ItemTicks&lt;br&gt;Inventories.Item.Keyrings&lt;br&gt;Inventories.Item.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Item&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.AlternateCurrency&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Loottable&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.NpcType&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcEmotes&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpells&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcTypesTint&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.NpcType&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Merchantlists&lt;br&gt;Inventories.Item.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Merchantlists.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.ObjectContents&lt;br&gt;Inventories.Item.Objects&lt;br&gt;Inventories.Item.Objects.Item&lt;br&gt;Inventories.Item.Objects.Zone&lt;br&gt;Inventories.Item.StartingItems&lt;br&gt;Inventories.Item.StartingItems.Item&lt;br&gt;Inventories.Item.StartingItems.Zone&lt;br&gt;Inventories.Item.Tasks&lt;br&gt;Inventories.Item.Tasks.TaskActivities&lt;br&gt;Inventories.Item.Tasks.TaskActivities.Goallists&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Tasks.Tasksets&lt;br&gt;Inventories.Item.TradeskillRecipeEntries&lt;br&gt;Inventories.Item.TradeskillRecipeEntries.TradeskillRecipe&lt;br&gt;Inventories.Item.TributeLevels&lt;br&gt;Keyrings&lt;br&gt;Mail&lt;br&gt;PlayerTitlesets&lt;br&gt;QuestGlobals&lt;br&gt;Timers&lt;br&gt;Titles&lt;br&gt;Traders&lt;br&gt;ZoneFlags
         * @param {string} [select] Column names [.] separated to fetch specific fields in response
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCharacterDatum(id: number, includes?: string, select?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ModelsCharacterDatum>>> {
            const localVarAxiosArgs = await CharacterDatumApiAxiosParamCreator(configuration).getCharacterDatum(id, includes, select, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * 
         * @summary Lists CharacterData
         * @param {string} [includes] Relationships [all] for all [number] for depth of relationships to load or [.] separated relationship names &lt;h4&gt;Relationships&lt;/h4&gt;AdventureStats&lt;br&gt;Buyers&lt;br&gt;CharRecipeLists&lt;br&gt;CharacterActivities&lt;br&gt;CharacterAltCurrencies&lt;br&gt;CharacterAlternateAbilities&lt;br&gt;CharacterAuras&lt;br&gt;CharacterBandoliers&lt;br&gt;CharacterBinds&lt;br&gt;CharacterBuffs&lt;br&gt;CharacterCorpses&lt;br&gt;CharacterCurrencies&lt;br&gt;CharacterDisciplines&lt;br&gt;CharacterEnabledtasks&lt;br&gt;CharacterInspectMessages&lt;br&gt;CharacterItemRecasts&lt;br&gt;CharacterLanguages&lt;br&gt;CharacterLeadershipAbilities&lt;br&gt;CharacterMaterials&lt;br&gt;CharacterMemmedSpells&lt;br&gt;CharacterPetBuffs&lt;br&gt;CharacterPetInfos&lt;br&gt;CharacterPetInventories&lt;br&gt;CharacterPotionbelts&lt;br&gt;CharacterSkills&lt;br&gt;CharacterSpells&lt;br&gt;CharacterTasks&lt;br&gt;CharacterTributes&lt;br&gt;CompletedTasks&lt;br&gt;DataBuckets&lt;br&gt;FactionValues&lt;br&gt;Friends&lt;br&gt;Guild&lt;br&gt;Guild.GuildBanks&lt;br&gt;Guild.GuildMembers&lt;br&gt;Guild.GuildRanks&lt;br&gt;GuildMembers&lt;br&gt;InstanceListPlayers&lt;br&gt;Inventories&lt;br&gt;Inventories.Item&lt;br&gt;Inventories.Item.AlternateCurrencies&lt;br&gt;Inventories.Item.CharacterCorpseItems&lt;br&gt;Inventories.Item.DiscoveredItems&lt;br&gt;Inventories.Item.Doors&lt;br&gt;Inventories.Item.Doors.Item&lt;br&gt;Inventories.Item.Fishings&lt;br&gt;Inventories.Item.Fishings.Item&lt;br&gt;Inventories.Item.Fishings.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Fishings.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Fishings.NpcType.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Fishings.Zone&lt;br&gt;Inventories.Item.Forages&lt;br&gt;Inventories.Item.Forages.Item&lt;br&gt;Inventories.Item.Forages.Zone&lt;br&gt;Inventories.Item.GroundSpawns&lt;br&gt;Inventories.Item.GroundSpawns.Zone&lt;br&gt;Inventories.Item.ItemTicks&lt;br&gt;Inventories.Item.Keyrings&lt;br&gt;Inventories.Item.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Item&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.AlternateCurrency&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Loottable&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.NpcType&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcEmotes&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpells&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcTypesTint&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.NpcType&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Merchantlists&lt;br&gt;Inventories.Item.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Merchantlists.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.ObjectContents&lt;br&gt;Inventories.Item.Objects&lt;br&gt;Inventories.Item.Objects.Item&lt;br&gt;Inventories.Item.Objects.Zone&lt;br&gt;Inventories.Item.StartingItems&lt;br&gt;Inventories.Item.StartingItems.Item&lt;br&gt;Inventories.Item.StartingItems.Zone&lt;br&gt;Inventories.Item.Tasks&lt;br&gt;Inventories.Item.Tasks.TaskActivities&lt;br&gt;Inventories.Item.Tasks.TaskActivities.Goallists&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Tasks.Tasksets&lt;br&gt;Inventories.Item.TradeskillRecipeEntries&lt;br&gt;Inventories.Item.TradeskillRecipeEntries.TradeskillRecipe&lt;br&gt;Inventories.Item.TributeLevels&lt;br&gt;Keyrings&lt;br&gt;Mail&lt;br&gt;PlayerTitlesets&lt;br&gt;QuestGlobals&lt;br&gt;Timers&lt;br&gt;Titles&lt;br&gt;Traders&lt;br&gt;ZoneFlags
         * @param {string} [where] Filter on specific fields. Multiple conditions [.] separated Example: col_like_value.col2__val2
         * @param {string} [whereOr] Filter on specific fields (Chained ors). Multiple conditions [.] separated Example: col_like_value.col2__val2
         * @param {string} [groupBy] Group by field. Multiple conditions [.] separated Example: field1.field2
         * @param {string} [limit] Rows to limit in response (Default: 10,000)
         * @param {string} [orderBy] Order by [field]
         * @param {string} [orderDirection] Order by field direction
         * @param {string} [select] Column names [.] separated to fetch specific fields in response
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listCharacterData(includes?: string, where?: string, whereOr?: string, groupBy?: string, limit?: string, orderBy?: string, orderDirection?: string, select?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ModelsCharacterDatum>>> {
            const localVarAxiosArgs = await CharacterDatumApiAxiosParamCreator(configuration).listCharacterData(includes, where, whereOr, groupBy, limit, orderBy, orderDirection, select, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * 
         * @summary Updates CharacterDatum
         * @param {number} id Id
         * @param {ModelsCharacterDatum} characterDatum CharacterDatum
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateCharacterDatum(id: number, characterDatum: ModelsCharacterDatum, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ModelsCharacterDatum>>> {
            const localVarAxiosArgs = await CharacterDatumApiAxiosParamCreator(configuration).updateCharacterDatum(id, characterDatum, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: (configuration?.basePath || basePath) + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * CharacterDatumApi - factory interface
 * @export
 */
export const CharacterDatumApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * 
         * @summary Creates CharacterDatum
         * @param {ModelsCharacterDatum} characterDatum CharacterDatum
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createCharacterDatum(characterDatum: ModelsCharacterDatum, options?: any): AxiosPromise<Array<ModelsCharacterDatum>> {
            return CharacterDatumApiFp(configuration).createCharacterDatum(characterDatum, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Deletes CharacterDatum
         * @param {number} id id
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCharacterDatum(id: number, options?: any): AxiosPromise<string> {
            return CharacterDatumApiFp(configuration).deleteCharacterDatum(id, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Gets CharacterData in bulk
         * @param {CrudcontrollersBulkFetchByIdsGetRequest} body body
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCharacterDataBulk(body: CrudcontrollersBulkFetchByIdsGetRequest, options?: any): AxiosPromise<Array<ModelsCharacterDatum>> {
            return CharacterDatumApiFp(configuration).getCharacterDataBulk(body, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Gets CharacterDatum
         * @param {number} id Id
         * @param {string} [includes] Relationships [all] for all [number] for depth of relationships to load or [.] separated relationship names &lt;h4&gt;Relationships&lt;/h4&gt;AdventureStats&lt;br&gt;Buyers&lt;br&gt;CharRecipeLists&lt;br&gt;CharacterActivities&lt;br&gt;CharacterAltCurrencies&lt;br&gt;CharacterAlternateAbilities&lt;br&gt;CharacterAuras&lt;br&gt;CharacterBandoliers&lt;br&gt;CharacterBinds&lt;br&gt;CharacterBuffs&lt;br&gt;CharacterCorpses&lt;br&gt;CharacterCurrencies&lt;br&gt;CharacterDisciplines&lt;br&gt;CharacterEnabledtasks&lt;br&gt;CharacterInspectMessages&lt;br&gt;CharacterItemRecasts&lt;br&gt;CharacterLanguages&lt;br&gt;CharacterLeadershipAbilities&lt;br&gt;CharacterMaterials&lt;br&gt;CharacterMemmedSpells&lt;br&gt;CharacterPetBuffs&lt;br&gt;CharacterPetInfos&lt;br&gt;CharacterPetInventories&lt;br&gt;CharacterPotionbelts&lt;br&gt;CharacterSkills&lt;br&gt;CharacterSpells&lt;br&gt;CharacterTasks&lt;br&gt;CharacterTributes&lt;br&gt;CompletedTasks&lt;br&gt;DataBuckets&lt;br&gt;FactionValues&lt;br&gt;Friends&lt;br&gt;Guild&lt;br&gt;Guild.GuildBanks&lt;br&gt;Guild.GuildMembers&lt;br&gt;Guild.GuildRanks&lt;br&gt;GuildMembers&lt;br&gt;InstanceListPlayers&lt;br&gt;Inventories&lt;br&gt;Inventories.Item&lt;br&gt;Inventories.Item.AlternateCurrencies&lt;br&gt;Inventories.Item.CharacterCorpseItems&lt;br&gt;Inventories.Item.DiscoveredItems&lt;br&gt;Inventories.Item.Doors&lt;br&gt;Inventories.Item.Doors.Item&lt;br&gt;Inventories.Item.Fishings&lt;br&gt;Inventories.Item.Fishings.Item&lt;br&gt;Inventories.Item.Fishings.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Fishings.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Fishings.NpcType.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Fishings.Zone&lt;br&gt;Inventories.Item.Forages&lt;br&gt;Inventories.Item.Forages.Item&lt;br&gt;Inventories.Item.Forages.Zone&lt;br&gt;Inventories.Item.GroundSpawns&lt;br&gt;Inventories.Item.GroundSpawns.Zone&lt;br&gt;Inventories.Item.ItemTicks&lt;br&gt;Inventories.Item.Keyrings&lt;br&gt;Inventories.Item.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Item&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.AlternateCurrency&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Loottable&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.NpcType&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcEmotes&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpells&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcTypesTint&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.NpcType&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Merchantlists&lt;br&gt;Inventories.Item.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Merchantlists.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.ObjectContents&lt;br&gt;Inventories.Item.Objects&lt;br&gt;Inventories.Item.Objects.Item&lt;br&gt;Inventories.Item.Objects.Zone&lt;br&gt;Inventories.Item.StartingItems&lt;br&gt;Inventories.Item.StartingItems.Item&lt;br&gt;Inventories.Item.StartingItems.Zone&lt;br&gt;Inventories.Item.Tasks&lt;br&gt;Inventories.Item.Tasks.TaskActivities&lt;br&gt;Inventories.Item.Tasks.TaskActivities.Goallists&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Tasks.Tasksets&lt;br&gt;Inventories.Item.TradeskillRecipeEntries&lt;br&gt;Inventories.Item.TradeskillRecipeEntries.TradeskillRecipe&lt;br&gt;Inventories.Item.TributeLevels&lt;br&gt;Keyrings&lt;br&gt;Mail&lt;br&gt;PlayerTitlesets&lt;br&gt;QuestGlobals&lt;br&gt;Timers&lt;br&gt;Titles&lt;br&gt;Traders&lt;br&gt;ZoneFlags
         * @param {string} [select] Column names [.] separated to fetch specific fields in response
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCharacterDatum(id: number, includes?: string, select?: string, options?: any): AxiosPromise<Array<ModelsCharacterDatum>> {
            return CharacterDatumApiFp(configuration).getCharacterDatum(id, includes, select, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Lists CharacterData
         * @param {string} [includes] Relationships [all] for all [number] for depth of relationships to load or [.] separated relationship names &lt;h4&gt;Relationships&lt;/h4&gt;AdventureStats&lt;br&gt;Buyers&lt;br&gt;CharRecipeLists&lt;br&gt;CharacterActivities&lt;br&gt;CharacterAltCurrencies&lt;br&gt;CharacterAlternateAbilities&lt;br&gt;CharacterAuras&lt;br&gt;CharacterBandoliers&lt;br&gt;CharacterBinds&lt;br&gt;CharacterBuffs&lt;br&gt;CharacterCorpses&lt;br&gt;CharacterCurrencies&lt;br&gt;CharacterDisciplines&lt;br&gt;CharacterEnabledtasks&lt;br&gt;CharacterInspectMessages&lt;br&gt;CharacterItemRecasts&lt;br&gt;CharacterLanguages&lt;br&gt;CharacterLeadershipAbilities&lt;br&gt;CharacterMaterials&lt;br&gt;CharacterMemmedSpells&lt;br&gt;CharacterPetBuffs&lt;br&gt;CharacterPetInfos&lt;br&gt;CharacterPetInventories&lt;br&gt;CharacterPotionbelts&lt;br&gt;CharacterSkills&lt;br&gt;CharacterSpells&lt;br&gt;CharacterTasks&lt;br&gt;CharacterTributes&lt;br&gt;CompletedTasks&lt;br&gt;DataBuckets&lt;br&gt;FactionValues&lt;br&gt;Friends&lt;br&gt;Guild&lt;br&gt;Guild.GuildBanks&lt;br&gt;Guild.GuildMembers&lt;br&gt;Guild.GuildRanks&lt;br&gt;GuildMembers&lt;br&gt;InstanceListPlayers&lt;br&gt;Inventories&lt;br&gt;Inventories.Item&lt;br&gt;Inventories.Item.AlternateCurrencies&lt;br&gt;Inventories.Item.CharacterCorpseItems&lt;br&gt;Inventories.Item.DiscoveredItems&lt;br&gt;Inventories.Item.Doors&lt;br&gt;Inventories.Item.Doors.Item&lt;br&gt;Inventories.Item.Fishings&lt;br&gt;Inventories.Item.Fishings.Item&lt;br&gt;Inventories.Item.Fishings.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Fishings.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Fishings.NpcType.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Fishings.Zone&lt;br&gt;Inventories.Item.Forages&lt;br&gt;Inventories.Item.Forages.Item&lt;br&gt;Inventories.Item.Forages.Zone&lt;br&gt;Inventories.Item.GroundSpawns&lt;br&gt;Inventories.Item.GroundSpawns.Zone&lt;br&gt;Inventories.Item.ItemTicks&lt;br&gt;Inventories.Item.Keyrings&lt;br&gt;Inventories.Item.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Item&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.AlternateCurrency&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Loottable&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.NpcType&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcEmotes&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpells&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcTypesTint&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.NpcType&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Merchantlists&lt;br&gt;Inventories.Item.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Merchantlists.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.ObjectContents&lt;br&gt;Inventories.Item.Objects&lt;br&gt;Inventories.Item.Objects.Item&lt;br&gt;Inventories.Item.Objects.Zone&lt;br&gt;Inventories.Item.StartingItems&lt;br&gt;Inventories.Item.StartingItems.Item&lt;br&gt;Inventories.Item.StartingItems.Zone&lt;br&gt;Inventories.Item.Tasks&lt;br&gt;Inventories.Item.Tasks.TaskActivities&lt;br&gt;Inventories.Item.Tasks.TaskActivities.Goallists&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Tasks.Tasksets&lt;br&gt;Inventories.Item.TradeskillRecipeEntries&lt;br&gt;Inventories.Item.TradeskillRecipeEntries.TradeskillRecipe&lt;br&gt;Inventories.Item.TributeLevels&lt;br&gt;Keyrings&lt;br&gt;Mail&lt;br&gt;PlayerTitlesets&lt;br&gt;QuestGlobals&lt;br&gt;Timers&lt;br&gt;Titles&lt;br&gt;Traders&lt;br&gt;ZoneFlags
         * @param {string} [where] Filter on specific fields. Multiple conditions [.] separated Example: col_like_value.col2__val2
         * @param {string} [whereOr] Filter on specific fields (Chained ors). Multiple conditions [.] separated Example: col_like_value.col2__val2
         * @param {string} [groupBy] Group by field. Multiple conditions [.] separated Example: field1.field2
         * @param {string} [limit] Rows to limit in response (Default: 10,000)
         * @param {string} [orderBy] Order by [field]
         * @param {string} [orderDirection] Order by field direction
         * @param {string} [select] Column names [.] separated to fetch specific fields in response
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listCharacterData(includes?: string, where?: string, whereOr?: string, groupBy?: string, limit?: string, orderBy?: string, orderDirection?: string, select?: string, options?: any): AxiosPromise<Array<ModelsCharacterDatum>> {
            return CharacterDatumApiFp(configuration).listCharacterData(includes, where, whereOr, groupBy, limit, orderBy, orderDirection, select, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Updates CharacterDatum
         * @param {number} id Id
         * @param {ModelsCharacterDatum} characterDatum CharacterDatum
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateCharacterDatum(id: number, characterDatum: ModelsCharacterDatum, options?: any): AxiosPromise<Array<ModelsCharacterDatum>> {
            return CharacterDatumApiFp(configuration).updateCharacterDatum(id, characterDatum, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createCharacterDatum operation in CharacterDatumApi.
 * @export
 * @interface CharacterDatumApiCreateCharacterDatumRequest
 */
export interface CharacterDatumApiCreateCharacterDatumRequest {
    /**
     * CharacterDatum
     * @type {ModelsCharacterDatum}
     * @memberof CharacterDatumApiCreateCharacterDatum
     */
    readonly characterDatum: ModelsCharacterDatum
}

/**
 * Request parameters for deleteCharacterDatum operation in CharacterDatumApi.
 * @export
 * @interface CharacterDatumApiDeleteCharacterDatumRequest
 */
export interface CharacterDatumApiDeleteCharacterDatumRequest {
    /**
     * id
     * @type {number}
     * @memberof CharacterDatumApiDeleteCharacterDatum
     */
    readonly id: number
}

/**
 * Request parameters for getCharacterDataBulk operation in CharacterDatumApi.
 * @export
 * @interface CharacterDatumApiGetCharacterDataBulkRequest
 */
export interface CharacterDatumApiGetCharacterDataBulkRequest {
    /**
     * body
     * @type {CrudcontrollersBulkFetchByIdsGetRequest}
     * @memberof CharacterDatumApiGetCharacterDataBulk
     */
    readonly body: CrudcontrollersBulkFetchByIdsGetRequest
}

/**
 * Request parameters for getCharacterDatum operation in CharacterDatumApi.
 * @export
 * @interface CharacterDatumApiGetCharacterDatumRequest
 */
export interface CharacterDatumApiGetCharacterDatumRequest {
    /**
     * Id
     * @type {number}
     * @memberof CharacterDatumApiGetCharacterDatum
     */
    readonly id: number

    /**
     * Relationships [all] for all [number] for depth of relationships to load or [.] separated relationship names &lt;h4&gt;Relationships&lt;/h4&gt;AdventureStats&lt;br&gt;Buyers&lt;br&gt;CharRecipeLists&lt;br&gt;CharacterActivities&lt;br&gt;CharacterAltCurrencies&lt;br&gt;CharacterAlternateAbilities&lt;br&gt;CharacterAuras&lt;br&gt;CharacterBandoliers&lt;br&gt;CharacterBinds&lt;br&gt;CharacterBuffs&lt;br&gt;CharacterCorpses&lt;br&gt;CharacterCurrencies&lt;br&gt;CharacterDisciplines&lt;br&gt;CharacterEnabledtasks&lt;br&gt;CharacterInspectMessages&lt;br&gt;CharacterItemRecasts&lt;br&gt;CharacterLanguages&lt;br&gt;CharacterLeadershipAbilities&lt;br&gt;CharacterMaterials&lt;br&gt;CharacterMemmedSpells&lt;br&gt;CharacterPetBuffs&lt;br&gt;CharacterPetInfos&lt;br&gt;CharacterPetInventories&lt;br&gt;CharacterPotionbelts&lt;br&gt;CharacterSkills&lt;br&gt;CharacterSpells&lt;br&gt;CharacterTasks&lt;br&gt;CharacterTributes&lt;br&gt;CompletedTasks&lt;br&gt;DataBuckets&lt;br&gt;FactionValues&lt;br&gt;Friends&lt;br&gt;Guild&lt;br&gt;Guild.GuildBanks&lt;br&gt;Guild.GuildMembers&lt;br&gt;Guild.GuildRanks&lt;br&gt;GuildMembers&lt;br&gt;InstanceListPlayers&lt;br&gt;Inventories&lt;br&gt;Inventories.Item&lt;br&gt;Inventories.Item.AlternateCurrencies&lt;br&gt;Inventories.Item.CharacterCorpseItems&lt;br&gt;Inventories.Item.DiscoveredItems&lt;br&gt;Inventories.Item.Doors&lt;br&gt;Inventories.Item.Doors.Item&lt;br&gt;Inventories.Item.Fishings&lt;br&gt;Inventories.Item.Fishings.Item&lt;br&gt;Inventories.Item.Fishings.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Fishings.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Fishings.NpcType.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Fishings.Zone&lt;br&gt;Inventories.Item.Forages&lt;br&gt;Inventories.Item.Forages.Item&lt;br&gt;Inventories.Item.Forages.Zone&lt;br&gt;Inventories.Item.GroundSpawns&lt;br&gt;Inventories.Item.GroundSpawns.Zone&lt;br&gt;Inventories.Item.ItemTicks&lt;br&gt;Inventories.Item.Keyrings&lt;br&gt;Inventories.Item.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Item&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.AlternateCurrency&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Loottable&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.NpcType&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcEmotes&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpells&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcTypesTint&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.NpcType&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Merchantlists&lt;br&gt;Inventories.Item.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Merchantlists.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.ObjectContents&lt;br&gt;Inventories.Item.Objects&lt;br&gt;Inventories.Item.Objects.Item&lt;br&gt;Inventories.Item.Objects.Zone&lt;br&gt;Inventories.Item.StartingItems&lt;br&gt;Inventories.Item.StartingItems.Item&lt;br&gt;Inventories.Item.StartingItems.Zone&lt;br&gt;Inventories.Item.Tasks&lt;br&gt;Inventories.Item.Tasks.TaskActivities&lt;br&gt;Inventories.Item.Tasks.TaskActivities.Goallists&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Tasks.Tasksets&lt;br&gt;Inventories.Item.TradeskillRecipeEntries&lt;br&gt;Inventories.Item.TradeskillRecipeEntries.TradeskillRecipe&lt;br&gt;Inventories.Item.TributeLevels&lt;br&gt;Keyrings&lt;br&gt;Mail&lt;br&gt;PlayerTitlesets&lt;br&gt;QuestGlobals&lt;br&gt;Timers&lt;br&gt;Titles&lt;br&gt;Traders&lt;br&gt;ZoneFlags
     * @type {string}
     * @memberof CharacterDatumApiGetCharacterDatum
     */
    readonly includes?: string

    /**
     * Column names [.] separated to fetch specific fields in response
     * @type {string}
     * @memberof CharacterDatumApiGetCharacterDatum
     */
    readonly select?: string
}

/**
 * Request parameters for listCharacterData operation in CharacterDatumApi.
 * @export
 * @interface CharacterDatumApiListCharacterDataRequest
 */
export interface CharacterDatumApiListCharacterDataRequest {
    /**
     * Relationships [all] for all [number] for depth of relationships to load or [.] separated relationship names &lt;h4&gt;Relationships&lt;/h4&gt;AdventureStats&lt;br&gt;Buyers&lt;br&gt;CharRecipeLists&lt;br&gt;CharacterActivities&lt;br&gt;CharacterAltCurrencies&lt;br&gt;CharacterAlternateAbilities&lt;br&gt;CharacterAuras&lt;br&gt;CharacterBandoliers&lt;br&gt;CharacterBinds&lt;br&gt;CharacterBuffs&lt;br&gt;CharacterCorpses&lt;br&gt;CharacterCurrencies&lt;br&gt;CharacterDisciplines&lt;br&gt;CharacterEnabledtasks&lt;br&gt;CharacterInspectMessages&lt;br&gt;CharacterItemRecasts&lt;br&gt;CharacterLanguages&lt;br&gt;CharacterLeadershipAbilities&lt;br&gt;CharacterMaterials&lt;br&gt;CharacterMemmedSpells&lt;br&gt;CharacterPetBuffs&lt;br&gt;CharacterPetInfos&lt;br&gt;CharacterPetInventories&lt;br&gt;CharacterPotionbelts&lt;br&gt;CharacterSkills&lt;br&gt;CharacterSpells&lt;br&gt;CharacterTasks&lt;br&gt;CharacterTributes&lt;br&gt;CompletedTasks&lt;br&gt;DataBuckets&lt;br&gt;FactionValues&lt;br&gt;Friends&lt;br&gt;Guild&lt;br&gt;Guild.GuildBanks&lt;br&gt;Guild.GuildMembers&lt;br&gt;Guild.GuildRanks&lt;br&gt;GuildMembers&lt;br&gt;InstanceListPlayers&lt;br&gt;Inventories&lt;br&gt;Inventories.Item&lt;br&gt;Inventories.Item.AlternateCurrencies&lt;br&gt;Inventories.Item.CharacterCorpseItems&lt;br&gt;Inventories.Item.DiscoveredItems&lt;br&gt;Inventories.Item.Doors&lt;br&gt;Inventories.Item.Doors.Item&lt;br&gt;Inventories.Item.Fishings&lt;br&gt;Inventories.Item.Fishings.Item&lt;br&gt;Inventories.Item.Fishings.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Fishings.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Fishings.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Fishings.NpcType.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Fishings.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Fishings.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Fishings.Zone&lt;br&gt;Inventories.Item.Forages&lt;br&gt;Inventories.Item.Forages.Item&lt;br&gt;Inventories.Item.Forages.Zone&lt;br&gt;Inventories.Item.GroundSpawns&lt;br&gt;Inventories.Item.GroundSpawns.Zone&lt;br&gt;Inventories.Item.ItemTicks&lt;br&gt;Inventories.Item.Keyrings&lt;br&gt;Inventories.Item.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Item&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.AlternateCurrency&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Loottable&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Merchantlists.NpcType&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcEmotes&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpells&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.NpcTypesTint&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.NpcType&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.LootdropEntries.Lootdrop.LoottableEntries.Loottable.NpcTypes.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Merchantlists&lt;br&gt;Inventories.Item.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Merchantlists.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Merchantlists.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.ObjectContents&lt;br&gt;Inventories.Item.Objects&lt;br&gt;Inventories.Item.Objects.Item&lt;br&gt;Inventories.Item.Objects.Zone&lt;br&gt;Inventories.Item.StartingItems&lt;br&gt;Inventories.Item.StartingItems.Item&lt;br&gt;Inventories.Item.StartingItems.Zone&lt;br&gt;Inventories.Item.Tasks&lt;br&gt;Inventories.Item.Tasks.TaskActivities&lt;br&gt;Inventories.Item.Tasks.TaskActivities.Goallists&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.AlternateCurrency&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Item&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LootdropEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.LootdropEntries.Lootdrop.LoottableEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.LoottableEntries.Loottable&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Loottable.NpcTypes&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Merchantlists&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Merchantlists.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcEmotes&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcFactions&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcFactions.NpcFactionEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcSpells&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcSpells.NpcSpellsEntries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.NpcTypesTint&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.NpcType&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2.Spawnentries&lt;br&gt;Inventories.Item.Tasks.TaskActivities.NpcType.Spawnentries.Spawngroup.Spawn2.Spawngroup&lt;br&gt;Inventories.Item.Tasks.Tasksets&lt;br&gt;Inventories.Item.TradeskillRecipeEntries&lt;br&gt;Inventories.Item.TradeskillRecipeEntries.TradeskillRecipe&lt;br&gt;Inventories.Item.TributeLevels&lt;br&gt;Keyrings&lt;br&gt;Mail&lt;br&gt;PlayerTitlesets&lt;br&gt;QuestGlobals&lt;br&gt;Timers&lt;br&gt;Titles&lt;br&gt;Traders&lt;br&gt;ZoneFlags
     * @type {string}
     * @memberof CharacterDatumApiListCharacterData
     */
    readonly includes?: string

    /**
     * Filter on specific fields. Multiple conditions [.] separated Example: col_like_value.col2__val2
     * @type {string}
     * @memberof CharacterDatumApiListCharacterData
     */
    readonly where?: string

    /**
     * Filter on specific fields (Chained ors). Multiple conditions [.] separated Example: col_like_value.col2__val2
     * @type {string}
     * @memberof CharacterDatumApiListCharacterData
     */
    readonly whereOr?: string

    /**
     * Group by field. Multiple conditions [.] separated Example: field1.field2
     * @type {string}
     * @memberof CharacterDatumApiListCharacterData
     */
    readonly groupBy?: string

    /**
     * Rows to limit in response (Default: 10,000)
     * @type {string}
     * @memberof CharacterDatumApiListCharacterData
     */
    readonly limit?: string

    /**
     * Order by [field]
     * @type {string}
     * @memberof CharacterDatumApiListCharacterData
     */
    readonly orderBy?: string

    /**
     * Order by field direction
     * @type {string}
     * @memberof CharacterDatumApiListCharacterData
     */
    readonly orderDirection?: string

    /**
     * Column names [.] separated to fetch specific fields in response
     * @type {string}
     * @memberof CharacterDatumApiListCharacterData
     */
    readonly select?: string
}

/**
 * Request parameters for updateCharacterDatum operation in CharacterDatumApi.
 * @export
 * @interface CharacterDatumApiUpdateCharacterDatumRequest
 */
export interface CharacterDatumApiUpdateCharacterDatumRequest {
    /**
     * Id
     * @type {number}
     * @memberof CharacterDatumApiUpdateCharacterDatum
     */
    readonly id: number

    /**
     * CharacterDatum
     * @type {ModelsCharacterDatum}
     * @memberof CharacterDatumApiUpdateCharacterDatum
     */
    readonly characterDatum: ModelsCharacterDatum
}

/**
 * CharacterDatumApi - object-oriented interface
 * @export
 * @class CharacterDatumApi
 * @extends {BaseAPI}
 */
export class CharacterDatumApi extends BaseAPI {
    /**
     * 
     * @summary Creates CharacterDatum
     * @param {CharacterDatumApiCreateCharacterDatumRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CharacterDatumApi
     */
    public createCharacterDatum(requestParameters: CharacterDatumApiCreateCharacterDatumRequest, options?: any) {
        return CharacterDatumApiFp(this.configuration).createCharacterDatum(requestParameters.characterDatum, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Deletes CharacterDatum
     * @param {CharacterDatumApiDeleteCharacterDatumRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CharacterDatumApi
     */
    public deleteCharacterDatum(requestParameters: CharacterDatumApiDeleteCharacterDatumRequest, options?: any) {
        return CharacterDatumApiFp(this.configuration).deleteCharacterDatum(requestParameters.id, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Gets CharacterData in bulk
     * @param {CharacterDatumApiGetCharacterDataBulkRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CharacterDatumApi
     */
    public getCharacterDataBulk(requestParameters: CharacterDatumApiGetCharacterDataBulkRequest, options?: any) {
        return CharacterDatumApiFp(this.configuration).getCharacterDataBulk(requestParameters.body, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Gets CharacterDatum
     * @param {CharacterDatumApiGetCharacterDatumRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CharacterDatumApi
     */
    public getCharacterDatum(requestParameters: CharacterDatumApiGetCharacterDatumRequest, options?: any) {
        return CharacterDatumApiFp(this.configuration).getCharacterDatum(requestParameters.id, requestParameters.includes, requestParameters.select, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Lists CharacterData
     * @param {CharacterDatumApiListCharacterDataRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CharacterDatumApi
     */
    public listCharacterData(requestParameters: CharacterDatumApiListCharacterDataRequest = {}, options?: any) {
        return CharacterDatumApiFp(this.configuration).listCharacterData(requestParameters.includes, requestParameters.where, requestParameters.whereOr, requestParameters.groupBy, requestParameters.limit, requestParameters.orderBy, requestParameters.orderDirection, requestParameters.select, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Updates CharacterDatum
     * @param {CharacterDatumApiUpdateCharacterDatumRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CharacterDatumApi
     */
    public updateCharacterDatum(requestParameters: CharacterDatumApiUpdateCharacterDatumRequest, options?: any) {
        return CharacterDatumApiFp(this.configuration).updateCharacterDatum(requestParameters.id, requestParameters.characterDatum, options).then((request) => request(this.axios, this.basePath));
    }
}
